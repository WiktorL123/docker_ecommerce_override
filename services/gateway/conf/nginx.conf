events {}

http {
  server {
    listen 80;

    # ========== AUTH ========== #
    location /api/auth/ {
      if ($request_method = OPTIONS) {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Content-Length' 0;
        add_header 'Content-Type' text/plain;
        return 204;
      }

      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers' '*' always;

      proxy_pass http://auth:4000/;
    }

    # ========== USERS ========== #
    location /api/users/ {
        proxy_pass http://users:4000/;  # ← WAŻNE: ZE SLASHEM!
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;

        add_header Access-Control-Allow-Origin *;
        add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
        add_header Access-Control-Allow-Headers "Authorization, Content-Type";

        if ($request_method = OPTIONS) {
            return 204;
        }
    }



    # ========== ORDERS ========== #
    location /api/orders/ {
      if ($request_method = OPTIONS) {
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
        add_header 'Access-Control-Allow-Headers' '*' always;
        add_header 'Content-Length' 0;
        add_header 'Content-Type' text/plain;
        return 204;
      }

      add_header 'Access-Control-Allow-Origin' '*' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers' '*' always;

      proxy_pass http://orders:4000/;
    }

    # ========== FRONTEND ========== #
    location / {
      root /usr/share/nginx/html;
      index index.html;
    }
  }
}
