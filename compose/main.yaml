services:
#  frontend:
#    build: ../services/gateway
#    ports:
#      - "3000:3000"
#    depends_on:
#      - auth
#      - users
#      - orders
#    networks:
#      - frontend_net
#      - backend_net

  auth:
    build:
      context: ../services/auth
      dockerfile: Dockerfile
    ports:
      - "4001:4000"
    secrets:
      - jwt_secret
    environment:
      JWT_SECRET_FILE: /run/secrets/jwt_secret
      DATABASE_URL: postgresql://user:supersecretpassword@db:5432/authdb
    networks:
      - frontend_net
      - backend_net

  users:
    build:
      context: ../
      dockerfile: services/users/Dockerfile
    ports:
      - "4002:4000"
    secrets:
      - db_password
    environment:
      DATABASE_URL: postgresql://user:supersecretpassword@db:5432/authdb
    networks:
      - frontend_net
      - backend_net

  orders:
    build:
      context: ../
      dockerfile: services/orders/Dockerfile
    depends_on:
      - db
      - auth
    ports:
      - "4003:4000"
    secrets:
      - db_password
    environment:
      DATABASE_URL: postgresql://user:supersecretpassword@db:5432/authdb
    networks:
      - backend_net

  gateway:
    build:
      context: ../services/gateway
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - auth
      - users
      - orders
      - db
    networks:
      - frontend_net
      - backend_net
    volumes:
      - type: bind
        source: ../services/gateway/conf/nginx.conf
        target: /etc/nginx/nginx.conf

  db:
    build:
      context: ../services/db
      dockerfile: Dockerfile
    environment:
      POSTGRES_USER: user
      POSTGRES_DB: authdb
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    secrets:
      - db_password
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - backend_net

secrets:
  db_password:
    file: ../secrets/db_password.txt
  jwt_secret:
    file: ../secrets/jwt_secret.txt

